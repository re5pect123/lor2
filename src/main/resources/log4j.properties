# log4j 1
# add jar -> problem with maven -> missing RollingFileAppender!
# http://www.java2s.com/Code/Jar/a/Downloadapachelog4jextras10jar.htm

# start level of log, name for configuration, . . .
log4j.rootLogger=TRACE, stdout, file, errorfile, sendMail

# Settings for output - console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%x %5p [%t] - %d{yyyy-MM-dd HH:mm:ss.SSS}; - (%F:%L) - %m%n

# Settings for server - save logs
#log4j.appender.file.File=${catalina.home}/lora/logs/logging.log

# Settings for saved file and backup 3 files if size is bigger then max file size
log4j.appender.file=org.apache.log4j.RollingFileAppender
# log4j.appender.file.File=C:\\log\\logging.log
log4j.appender.file.File=/home/lora/logs/logging.log
log4j.appender.file.MaxFileSize=2KB
log4j.appender.file.MaxBackupIndex=3
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

# Settings for error file
log4j.appender.errorfile=org.apache.log4j.RollingFileAppender
log4j.appender.errorfile.Threshold=ERROR
#log4j.appender.errorfile.File=C:\\log\\errorlogging.log
log4j.appender.errorfile.File=/home/lora/logs/errorfile.log
log4j.appender.errorfile.MaxFileSize=10MB
log4j.appender.errorfile.MaxBackupIndex=10
log4j.appender.errorfile.layout=org.apache.log4j.PatternLayout
log4j.appender.errorfile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

# Settings for send mail if threshold ERROR
log4j.appender.sendMail=org.apache.log4j.net.SMTPAppender  
log4j.appender.sendMail.SMTPProtocol=smtps
log4j.appender.sendMail.Threshold=ERROR  
log4j.appender.sendMail.SMTPPort=465
log4j.appender.sendMail.SMTPUsername=#@gmail.com 
log4j.appender.sendMail.From=#@gmail.com
log4j.appender.sendMail.SMTPPassword=#
log4j.appender.sendMail.To=#@hotmail.com 
log4j.appender.sendMail.SMTPHost=smtp.gmail.com
log4j.appender.sendMail.Subject=Error Alert  
log4j.appender.sendMail.layout=org.apache.log4j.PatternLayout  
log4j.appender.sendMail.layout.ConversionPattern=%d{yyyy-MM-ddHH:mm:ss.SSS} [%p] %t %c - %m%n
log4j.appender.sendMail.smtp.starttls.enable=true
log4j.appender.sendMail.smtp.auth=true
log4j.appender.sendMail.BufferSize=1

# rotate per day -> create new log per day
#log4j.appender.loggerId=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.loggerId.layout=org.apache.log4j.PatternLayout
#log4j.appender.loggerId.layout.ConversionPattern=%d [%t] %-5p (%F:%L) - %m%n
#log4j.appender.loggerId.File=d:/logs/example
#log4j.appender.loggerId.DatePattern='-'yyyyMMdd'.log'

# rotate per minut -> create new log per minut
# log4j.appender.loggerId=org.apache.log4j.DailyRollingFileAppender
# log4j.appender.loggerId.layout=org.apache.log4j.PatternLayout
# log4j.appender.loggerId.layout.ConversionPattern=%d [%t] %-5p (%F:%L) - %m%n
# log4j.appender.loggerId.File=C:\\log\\minute.log
# log4j.appender.loggerId.DatePattern='-'yyyyMMdd-HHmm'.log'

# Zip file on size -> create new log when size is over max file size
# log4j.appender.loggerId=org.apache.log4j.rolling.RollingFileAppender
# log4j.appender.loggerId.rollingPolicy=org.apache.log4j.rolling.FixedWindowRollingPolicy
# log4j.appender.loggerId.rollingPolicy.maxIndex=5
# log4j.appender.loggerId.triggeringPolicy=org.apache.log4j.rolling.SizeBasedTriggeringPolicy
# log4j.appender.loggerId.triggeringPolicy.MaxFileSize=100
# log4j.appender.loggerId.rollingPolicy.FileNamePattern=C:\\log\\worker-%i.log.gz
# log4j.appender.loggerId.rollingPolicy.ActiveFileName=C:\\log\\worker.log
# log4j.appender.loggerId.layout=org.apache.log4j.PatternLayout
# log4j.appender.loggerId.layout.ConversionPattern=%d [%t] %-5p (%F:%L)

# Every minute save to archive logs, and create new
#log4j.appender.loggerId=org.apache.log4j.rolling.RollingFileAppender
#log4j.appender.loggerId.rollingPolicy=org.apache.log4j.rolling.TimeBasedRollingPolicy
#log4j.appender.loggerId.rollingPolicy.ActiveFileName=worker.log
#log4j.appender.loggerId.rollingPolicy.FileNamePattern=worker-.%d{yyyyMMdd-HHmm}.log.gz
#log4j.appender.loggerId.layout=org.apache.log4j.PatternLayout
#log4j.appender.loggerId.layout.ConversionPattern=%d [%t] %-5p (%F:%L) - %m%n

#The conversion pattern specified is %d [%t] %-5p (%F:%L) - %m%n
#%C	The complete class name that has invoked the log
#%d	The timestamp when log request is invoked. Further customized using java's DateFormat style of abbreviations like %d{yyyy-MM-dd HH:mm:ss,SSS} which incidentally is the default used.
#%F	The source file name that makes the log request.
#%l	The source file name, method name and line number where log request is made.
#%L	The line number of the source file where log request is made.
#%m	The actual message logged.
#%M	The method name that makes the log request.
#%n	New line character
#%p	The log level used in the log request.
#%r	The time elapsed between start of the application and the log request in milliseconds.
#%t	The java thread name that nakes the log request.